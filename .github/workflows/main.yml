name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ci_cd
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, sqlite, curl, zip, gd, intl, bcmath, soap, redis, xdebug
        coverage: xdebug

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress

    - name: Copy .env.example to .env
      run: cp .env.example .env

    - name: Set up environment variables
      run: |
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=ci_cd" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=root" >> .env

    - name: Generate application key
      run: php artisan key:generate

    - name: Wait for MySQL to be ready
      run: sleep 20

    - name: Run migrations
      run: php artisan migrate --force


  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, sqlite, curl, zip, gd, intl, bcmath, soap, redis

    - name: Install Composer dependencies (no dev)
      run: composer install --prefer-dist --no-progress --no-dev

    - name: Build assets (if using Laravel Mix or Vite)
      run: |
        npm install
        npm run build

    - name: Prepare deployment package
      run: |
        mkdir -p deployment
        cp -r * deployment/
        cd deployment
        rm -rf node_modules .github tests
        tar -czf ../laravel-app.tar.gz .

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: laravel-app
        path: laravel-app.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: laravel-app
        path: .

    - name: Extract deployment package
      run: tar -xzf laravel-app.tar.gz -C /tmp/deployment

    - name: Deploy to server
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      run: |
        scp -i $DEPLOY_KEY -r /tmp/deployment/* $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
        ssh -i $DEPLOY_KEY $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && php artisan optimize:clear && php artisan migrate --force"